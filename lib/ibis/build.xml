<project name="ibis-amuse" default="build" basedir=".">
    <description>
        Build file for Ibis-Amuse
    </description>

    <!-- empty version by default -->
    <property name="version" value="" />

    <property name="jar" value="ibis-amuse${version}.jar" />

    <!-- locations of external libraries. Defaults to included versions,
         override to use custom versions -->
    <property name="deploy" value="deploy" />

    <!-- create the class path. -->
    <path id="class_path">
        <fileset dir="lib">
            <include name="*.jar" />
        </fileset>
        <fileset dir="${deploy}/lib">
            <include name="*.jar" />
        </fileset>
        <pathelement path="tmp" />
    </path>

    <target name="deploy" description="build deploy sub project">
        <ant dir="${deploy}" />
    </target>

    <target name="build" description="build jar file" depends="clean,deploy,compile" />

    <target name="compile" description="build jar file" depends="clean">
        <mkdir dir="tmp" />
        <mkdir dir="tmp/headers" />
        <mkdir dir="lib" />

        <!-- Compile the java code from src into tmp -->
        <javac srcdir="src" destdir="tmp" includeantruntime="false" debug="on" source="1.5" target="1.5" classpathref="class_path">
            <compilerarg value="-Xlint:unchecked" />
        </javac>

        <!-- Run Ibisc -->
        <java classname="ibis.compile.Ibisc" taskname="Ibisc" failonerror="true" dir="tmp" maxmemory="512m" fork="true">
            <arg line="." />
            <classpath refid="class_path" />
        </java>

	<!-- Build native headers -->
        <javah classpath="tmp"
               destdir="tmp/headers"
               force="yes"
               class="ibis.amuse.CommunityCode"
        />

	<jar destfile="lib/${jar}">
            <fileset dir="tmp" includes="**/*.class" />
            <metainf dir="." includes="LICENSE.txt" />
        </jar>

     <!--   <delete dir="tmp" /> -->
    </target>

    <target name="clean" description="clean everything">
        <ant dir="${deploy}" target="clean" />

        <delete dir="dist" />
        <delete dir="lib" />
        <delete dir="tmp" />
    </target>

    <target name="distclean" description="clean everything, remove deploy">

        <delete dir="deploy" />
        <delete dir="dist" />
        <delete dir="lib" />
        <delete dir="tmp" />
    </target>



</project>
